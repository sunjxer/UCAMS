<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ucams.modules.ams.dao.AmsUserDictDao">
    
	<sql id="amsUserDictColumns">
		a.id AS "id",
		a.parent_id AS "parent.id",
		a.parent_ids AS "parentIds",
		a.name AS "name",
		a.sort AS "sort",
		a.code AS "code",
		a.type AS "type",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="amsUserDictJoins">
	</sql>
    
	<select id="get" resultType="AmsUserDict">
		SELECT 
			<include refid="amsUserDictColumns"/>
		FROM ams_user_dict a
		<include refid="amsUserDictJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="AmsUserDict">
		SELECT 
			<include refid="amsUserDictColumns"/>
		FROM ams_user_dict a
		<include refid="amsUserDictJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="parentIds != null and parentIds != ''">
				AND a.parent_ids LIKE 
					<if test="dbName == 'oracle'">'%'||#{parentIds}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{parentIds}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{parentIds},'%')</if>
			</if>
			<!-- <if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if> -->
			<if test="type != null and type != ''">
				AND a.type = #{type}
			</if>
		</where>
		ORDER BY a.sort ASC
	</select>
	
	<select id="findAllList" resultType="AmsUserDict">
		SELECT 
			<include refid="amsUserDictColumns"/>
		FROM ams_user_dict a
		<include refid="amsUserDictJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		ORDER BY a.sort ASC
	</select>
	
	<select id="findByParentIdsLike" resultType="AmsUserDict">
		SELECT
			a.id,
			a.parent_id AS "parent.id",
			a.parent_ids
		FROM ams_user_dict a
		<include refid="amsUserDictJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.parent_ids LIKE #{parentIds}
		</where>
		ORDER BY a.sort ASC
	</select>
	
	<insert id="insert">
		INSERT INTO ams_user_dict(
			id,
			parent_id,
			parent_ids,
			name,
			sort,
			code,
			type,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{parent.id},
			#{parentIds},
			#{name},
			#{sort},
			#{code},
			#{type},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE ams_user_dict SET 	
			parent_id = #{parent.id},
			parent_ids = #{parentIds},
			name = #{name},
			sort = #{sort},
			code = #{code},
			type = #{type},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			del_flag = #{delFlag}
		WHERE id = #{id}
	</update>
	
	<update id="updateParentIds">
		UPDATE ams_user_dict SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE ams_user_dict SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id} OR parent_ids LIKE CONCAT('%',#{id},'%')
	</update>
	
</mapper>